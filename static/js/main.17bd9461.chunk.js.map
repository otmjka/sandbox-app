{"version":3,"sources":["config.ts","actions/persistAuthInfo.ts","actions/logoutUser.ts","actionTypes/auth.ts","actions/getUserProfile.ts","actionTypes/user.ts","actions/startCreateTransaction.ts","actionTypes/transactions.ts","actions/failCreateTransaction.ts","actions/successCreateTransaction.ts","actions/createTransaction.ts","actionTypes/users.ts","actions/getFilteredUserList.ts","actions/failFetchTransactions.ts","actions/fetchUserTransactions.ts","containers/Common/HomeScreenContainer/mapStateToProps.ts","components/Common/Layout/useStyles.js","components/Common/Logo/Logo.tsx","components/Common/Logo/index.ts","components/Common/HeaderBar/messages.ts","components/Common/HeaderBar/useStyles.js","components/Common/HeaderBar/AuthBtnGroup.tsx","components/Common/HeaderBar/HeaderUserData.tsx","components/Common/HeaderBar/HeaderBar.tsx","components/Common/HeaderBar/index.ts","containers/Common/HeaderBar/mapStateToProps.ts","containers/Common/HeaderBar/HeaderBarContainer.js","components/Common/Layout/messages.js","components/Common/Layout/index.js","components/Common/Layout/Layout.js","components/User/TransferForm/styles.js","components/User/Autocomplete/index.ts","components/User/Autocomplete/Autocomplete.tsx","components/User/TransferForm/messages.js","components/User/TransferForm/index.ts","components/User/TransferForm/TransferForm.tsx","components/User/Transactions/messages.js","components/User/Transactions/Transactions.tsx","components/User/Transactions/index.ts","components/Unknown/HomeScreen/index.js","components/Unknown/HomeScreen/HomeScreen.tsx","components/Common/WelcomeScreen/messages.js","components/Common/WelcomeScreen/index.js","components/Common/WelcomeScreen/WelcomeScreen.tsx","containers/Common/HomeScreenContainer/HomeScreenContainer.tsx","containers/Common/HomeScreenContainer/index.ts","actions/startFetchTransactions.ts","actions/setFetchTransactions.ts","components/Unknown/LoginScreen/messages.js","components/Common/LoginForm/messages.js","components/Common/LoginForm/styles.js","components/Common/LoginForm/index.js","components/Common/LoginForm/LoginForm.js","actions/loginUser.js","actions/signupUser.js","actions/verifyAuth.ts","containers/Common/LoginFormContainer.js","components/Unknown/LoginScreen/index.js","components/Unknown/LoginScreen/LoginScreen.js","components/Unknown/SignupScreen/messages.js","components/Common/SignupForm/messages.js","components/Common/SignupForm/styles.js","components/Common/SignupForm/index.js","components/Common/SignupForm/SignupForm.js","containers/Common/SignupFormContainer.js","components/Unknown/SignupScreen/index.js","components/Unknown/SignupScreen/SignupScreen.js","components/Common/Routes/index.tsx","components/Common/Routes/Routes.tsx","containers/Common/RoutesContainer.js","components/Common/App/index.tsx","components/Common/App/App.tsx","components/Common/Router/index.js","components/Common/Router/Router.js","reducers/common/config.js","actionTypes/common.ts","common/translations.js","components/Common/IntlTextComponent/IntlTextComponent.js","common/omitNewLines.js","components/Common/IntlTextComponent/index.js","components/Common/IntlProvider/index.js","components/Common/IntlProvider/IntlProvider.js","containers/Common/IntlProviderContainer.js","components/Common/Theme/index.js","components/Common/Theme/Theme.js","components/Common/Entrypoint/Entrypoint.tsx","reducers/common/index.js","reducers/auth/index.ts","reducers/auth/auth.ts","reducers/user/index.ts","reducers/user/user.ts","reducers/users/index.ts","reducers/users/users.ts","reducers/transactions/index.ts","reducers/transactions/transactions.ts","common/configureRootReducer.js","common/configureStore.js","index.tsx"],"names":["config","common","baseUrl","defaultLocale","supportedLocales","persistAuthInfo","idToken","localStorage","removeItem","window","authData","JSON","stringify","setItem","logoutUser","dispatch","type","setUserData","userData","getUserProfile","getState","a","auth","isAuthenticated","axios","request","url","headers","Authorization","baseURL","userInfo","status","data","t","isDefined","startCreateTransaction","failCreateTransaction","payload","successCreateTransaction","transaction","createTransaction","user","amount","name","method","response","message","receiveFilteredUserList","users","failFetchTransactions","mapStateToProps","state","transactions","balance","useStyles","makeStyles","theme","secondRow","backgroundColor","appBar","content","minHeight","footerContent","color","grey","fontSize","root","marginTop","Logo","classes","className","to","style","textDecoration","Typography","variant","component","defineMessages","login","id","defaultMessage","signup","editProfile","myGroups","groupsBrowseMsg","createGroup","notifications","logout","balanceMsg","flexGrow","toolBar","boxShadow","breakpoints","up","margin","maxWidth","width","menuButton","marginRight","spacing","display","grow","background","authGroup","marginLeft","drawerAuthGroup","flexDirection","drawer","flexShrink","drawerPaper","closeMenuButton","toolbar","mixins","profileMenuLink","textTransform","blue","profileMenuItem","borderBottom","padding","listItemTextRoot","AuthBtnGroup","Button","size","Link","messages","HeaderUserData","props","userProfile","Box","alignItems","mr","onClick","HeaderBar","showUserData","AppBar","position","Toolbar","HeaderBarContainer","selected","useSelector","useDispatch","useEffect","headerMsg","contentLeft","resources","ourOrganization","contactUs","intro","guide","copyright","termsMsg","privacyMsg","Layout","children","mb","CssBaseline","p","Grid","container","item","xs","justifyContent","marginBottom","alertRoot","input","cardRoot","paddingBottom","contentRoot","paddingTop","paddingLeft","paddingRight","Autocomplete","error","initValue","inputLabel","setValue","onChangeFilter","useState","value","setStateValue","handleChange","e","target","options","getOptionLabel","option","onChange","event","newValue","handleChangeValue","renderInput","params","TextField","helperText","label","peoplePlaceholder","amountPlaceholder","fieldRequired","sendMoneyMsg","enoughMoneyMsg","transferMoneyMsg","repeatMsg","required","loadingMsg","TransferForm","loadingSend","submitError","register","handleSubmit","errors","userInitValue","sendMoney","setUserInitValue","formatMessage","useIntl","Paper","py","onSubmit","values","ml","mt","FormHelperText","pt","inputRef","min","validate","max","parseInt","Alert","severity","disabled","transactionsMsg","table","minWidth","Transactions","onRepeat","length","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","n","key","date","username","Math","abs","HomeScreen","useForm","Container","bodyMsg","WelcomeScreen","withSnackbar","HomeScreenContainer","enqueueSnackbar","setLoadingSend","setSubmitError","handleSendMoney","filter","Promise","resolve","console","log","getFilteredUserList","header","formTitle","emailPlaceholder","passwordPlaceholder","signinLabel","facebookLabel","googleLabel","twitterLabel","signupLink","forgotLink","loading","LoginForm","Card","Divider","CardContent","fullWidth","email","autoComplete","password","fieldRequiredAndMin6","loginSuccess","loginFail","errorStatus","loginUser","Error","signupUser","verifyAuth","authStr","getItem","parse","LoginFormContainer","history","useHistory","setLoading","push","LoginScreen","justify","sm","md","lg","xl","namePlaceholder","repasswordPlaceholder","repasswordMessage","SignupForm","getValues","repassword","retype","SignupFormContainer","SignupScreen","Routes","isVerifying","path","exact","routes","RoutesContainer","App","Router","initialState","locale","handleActions","getLocale","createSelector","en","formatTranslationMessages","messageKeys","Object","keys","defaultFormattedMessages","enTranslationMessages","reduce","formattedMessages","formattedMessage","assign","IntlTextComponent","replace","propTypes","PropTypes","string","isRequired","IntlProvider","translations","textComponent","mapState","createStructuredSelector","connect","createMuiTheme","palette","primary","main","contrastText","light","secondary","green","text","height","overrides","MuiInputLabel","outlined","MuiTypography","h1","fontWeight","h2","fontStretch","fontStyle","lineHeight","letterSpacing","h3","h4","h5","h6","subtitle1","caption","Entrypoint","store","IntlProviderContainer","maxSnack","ThemeProvider","combineReducers","undefined","action","loaded","fetchLoading","errorFetch","errorSet","configureRootReducer","router","connectRouter","reducers","computeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStoreGlobal","middlewares","thunk","routerMiddleware","enhancers","applyMiddleware","composeEnhancers","rootReducer","createStore","createBrowserHistory","configureStore","ReactDOM","render","StrictMode","document","getElementById","run"],"mappings":"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","file":"static/js/main.17bd9461.chunk.js","sourcesContent":["const config = {\n  common: {\n    // baseUrl: process.env.REACT_APP_API_BASE_URL,\n    baseUrl: 'http://193.124.114.46:3001/',\n    defaultLocale: 'en',\n    supportedLocales: ['en'],\n\n  },\n}\n\nexport default config\n","const AUTH_FIELD = 'auth'\nexport default function persistAuthInfo({idToken}: {idToken?: string}) {\n  if (!idToken) return localStorage.removeItem(AUTH_FIELD)\n  if (typeof window === 'object') {\n    const authData = JSON.stringify({ idToken });\n    window.localStorage.setItem(AUTH_FIELD, authData);\n  }\n}\n","import { LOGOUT_SUCCESS } from '../actionTypes/auth';\nimport persistAuthInfo from './persistAuthInfo'\nexport const receiveLogout = () => ({\n  type: LOGOUT_SUCCESS,\n});\n\nconst logoutUser = () => (dispatch) => {\n  persistAuthInfo({})\n  dispatch(receiveLogout())\n}\n\nexport default logoutUser;\n","export const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n","import axios from 'axios';\nimport config from '../config';\nimport t from 'typy';\n\nimport {\n  START_USER_DATA,\n  RECEIVE_USER_DATA,\n  FAIL_USER_DATA\n} from '../actionTypes/user';\nimport logoutUser from './logoutUser';\n\nimport { UserProfile } from '../types/user';\n\nconst baseUrl = config.common.baseUrl;\n\nexport const startFetchUserProfile = () => ({\n  type: START_USER_DATA,\n})\n\nexport const failFetchUserProfile = () => ({\n  type: FAIL_USER_DATA,\n})\n\nexport const setUserData = userData => ({\n  type: RECEIVE_USER_DATA,\n  userData\n});\n\nexport const getUserProfile = () => async (dispatch, getState) => {\n  const {\n    auth: { idToken, isAuthenticated }\n  } = getState();\n  try {\n    if (!isAuthenticated) return \n    dispatch(startFetchUserProfile())\n    const userInfo = await axios.request({\n      url: '/api/protected/user-info',\n      headers: { Authorization: `Bearer ${idToken}` },\n      baseURL: `${baseUrl}`\n    });\n\n    if (userInfo.status === 200) {\n      const userData: UserProfile = { ...userInfo.data['user_info_token'] };\n      dispatch(setUserData(userData));\n    }\n  } catch (err) {\n    if (t(err, 'response.status').isDefined) {\n      dispatch(failFetchUserProfile())\n      dispatch(logoutUser());\n    }\n  }\n};\n","export const START_USER_DATA = 'START_USER_DATA';\nexport const RECEIVE_USER_DATA = 'RECEIVE_USER_DATA';\nexport const FAIL_USER_DATA = 'FAIL_USER_DATA';\n","import { START_CREATE_TRANSACTION } from '../actionTypes/transactions';\n\nconst startCreateTransaction = () => ({\n  type: START_CREATE_TRANSACTION\n});\n\nexport default startCreateTransaction;\n","export const START_TRANSACTIONS_DATA = 'START_TRANSACTIONS_DATA';\nexport const RECEIVE_TRANSACTIONS_DATA = 'RECEIVE_TRANSACTIONS_DATA';\nexport const FAIL_TRANSACTIONS_DATA = 'FAIL_TRANSACTIONS_DATA';\n\nexport const START_CREATE_TRANSACTION = 'START_CREATE_TRANSACTION';\nexport const SUCCESSFUL_CREATE_TRANSACTION = 'SUCCESSFUL_CREATE_TRANSACTION';\nexport const FAIL_CREATE_TRANSACTION = 'FAIL_CREATE_TRANSACTION';\n","import { FAIL_CREATE_TRANSACTION } from '../actionTypes/transactions';\n\nconst failCreateTransaction = (payload) => ({\n  type: FAIL_CREATE_TRANSACTION,\n  payload\n});\n\nexport default failCreateTransaction;\n","import { SUCCESSFUL_CREATE_TRANSACTION } from '../actionTypes/transactions';\n\nimport { UserTransaction } from '../types/transactions';\n\nconst successCreateTransaction = (transaction: UserTransaction) => ({\n  type: SUCCESSFUL_CREATE_TRANSACTION,\n  payload: transaction\n});\n\nexport default successCreateTransaction;\n","import axios from 'axios';\nimport config from '../config';\nimport t from 'typy';\n\nimport { getUserProfile } from './getUserProfile';\n\nimport { UserTransaction } from '../types/transactions';\nimport startCreateTransaction from './startCreateTransaction';\nimport failCreateTransaction from './failCreateTransaction';\nimport successCreateTransaction from './successCreateTransaction';\n\nconst baseUrl = config.common.baseUrl;\n\nexport default function createTransaction({ user, amount }) {\n  return async (dispatch, getState) => {\n    const {\n      auth: { idToken }\n    } = getState();\n    const { name } = user;\n    try {\n      dispatch(startCreateTransaction());\n      const userInfo = await axios.request({\n        url: '/api/protected/transactions',\n        method: 'POST',\n        headers: { Authorization: `Bearer ${idToken}` },\n        baseURL: `${baseUrl}`,\n        data: { name, amount }\n      });\n\n      if (userInfo.status === 200) {\n        const transaction: UserTransaction = {\n          ...userInfo.data['trans_token']\n        };\n        dispatch(successCreateTransaction(transaction));\n        dispatch(getUserProfile());\n      }\n    } catch (err) {\n      if (t(err, 'response.status').isDefined) {\n        dispatch(failCreateTransaction(err.response.status));\n      }\n      if (t(err, 'response.status').isDefined) {\n        return { message: err.response.data };\n      } else {\n        return { message: 'unnown error' };\n      }\n    }\n  };\n}\n","export const START_FETCH_FILTERED_USER_LIST = 'START_FETCH_FILTERED_USER_LIST';\nexport const RECEIVE_FILTERED_USER_LIST = 'RECEIVE_FILTERED_USER_LIST';\nexport const FAIL_FETCH_FILTERED_USER_LIST = 'FAIL_FETCH_FILTERED_USER_LIST';\n","import axios from 'axios';\nimport config from '../config';\nimport t from 'typy';\n\nimport {\n  START_FETCH_FILTERED_USER_LIST,\n  RECEIVE_FILTERED_USER_LIST,\n  FAIL_FETCH_FILTERED_USER_LIST\n} from '../actionTypes/users';\n\nconst baseUrl = config.common.baseUrl;\n\nfunction startFetchFilteredList() {\n  return {\n    type: START_FETCH_FILTERED_USER_LIST\n  };\n}\n\nfunction receiveFilteredUserList(users) {\n  return {\n    type: RECEIVE_FILTERED_USER_LIST,\n    payload: users\n  };\n}\n\nfunction failFetchFilteredUserList() {\n  return {\n    type: FAIL_FETCH_FILTERED_USER_LIST\n  };\n}\n\nexport const getFilteredUserList = filter => async (dispatch, getState) => {\n  const {\n    auth: { idToken }\n  } = getState();\n  try {\n    if (!idToken) return;\n    if (!filter) {\n      return Promise.resolve(dispatch(receiveFilteredUserList([])));\n    }\n\n    dispatch(startFetchFilteredList());\n    const response = await axios.request({\n      url: '/api/protected/users/list',\n      method: 'POST',\n      data: { filter },\n      headers: { Authorization: `Bearer ${idToken}` },\n      baseURL: `${baseUrl}`\n    });\n    if (response.status === 200) {\n      return dispatch(receiveFilteredUserList(response.data));\n    }\n    dispatch(failFetchFilteredUserList());\n  } catch (err) {\n    if (t(err, 'response.status').isDefined) {\n      console.log(t(err, 'response'));\n    }\n  }\n};\n","import { FAIL_TRANSACTIONS_DATA } from '../actionTypes/transactions';\n\nconst failFetchTransactions = () => ({\n  type: FAIL_TRANSACTIONS_DATA\n});\n\nexport default failFetchTransactions;\n","import axios from 'axios';\nimport config from '../config';\nimport t from 'typy';\n\nimport logoutUser from './logoutUser';\n\nimport { UserTransaction } from '../types/transactions';\nimport startFetchTransactions from './startFetchTransactions'\nimport failFetchTransactions from './failFetchTransactions'\nimport setFetchTransactions from './setFetchTransactions'\n\nconst baseUrl = config.common.baseUrl;\n\n\nexport const fetchUserTransactions = () => async (dispatch, getState) => {\n  const {\n    auth: { idToken, isAuthenticated }\n  } = getState();\n  if (!isAuthenticated) return\n  try {\n    dispatch(startFetchTransactions())\n    const userInfo = await axios.request({\n      url: '/api/protected/transactions',\n      headers: { Authorization: `Bearer ${idToken}` },\n      baseURL: `${baseUrl}`\n    });\n    if (userInfo.status === 200) {\n      const transactions: UserTransaction = userInfo.data['trans_token'];\n      dispatch(setFetchTransactions(transactions));\n    }\n  } catch (err) {\n    if (t(err, 'response.status').isDefined) {\n      dispatch(failFetchTransactions())\n      // TODO: only if user is not auth\n      dispatch(logoutUser());\n    }\n  }\n};\n","import { UserRecord } from '../../../types/user';\nimport { UserTransaction } from '../../../types/transactions';\n\ntype HomeSelector = {\n  isAuthenticated: boolean;\n  users: UserRecord[];\n  transactions: UserTransaction[];\n  balance: number;\n};\n\nexport default function mapStateToProps(state) {\n  const {\n    auth: { isAuthenticated },\n    user: {userData},\n    users: { users },\n    transactions: { transactions }\n  } = state;\n  const {balance} = userData || {}\n  // : { userData: { balance } = {} } = {userData: {}}\n  return { isAuthenticated, users, transactions, balance };\n}\n","import {makeStyles} from '@material-ui/core/styles';\nimport {grey} from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  secondRow: {\n    backgroundColor: theme.appBar.backgroundColor\n  },\n  content: {\n    minHeight: 'calc(100vh - 88px)'\n  },\n  footerContent: {\n    color: grey[900],\n    fontSize: 16\n  }\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: '9px'\n  }\n}));\n\nconst Logo = () => {\n  const classes = useStyles();\n\n  return (\n    <Link className={classes.root} to=\"/\" style={{fontSize: 30, textDecoration: 'none'}}>\n      <Typography style={{fontSize: 48, textDecoration: 'none'}} variant=\"h1\" component=\"div\" color=\"primary\">\n        <span style={{color: '#fcba03'}}>P</span>\n        <span style={{color: '#4caf50'}}>W</span>\n      </Typography>\n    </Link>\n  );\n};\n\nexport default Logo;\n","import Logo from './Logo';\n\nexport default Logo;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  login: {\n    id: 'Common.HeaderBar.editProfile',\n    defaultMessage: 'Login',\n  },\n  signup: { id: 'Common.HeaderBar.signup', defaultMessage: 'Sign Up' },\n  editProfile: {\n    id: 'Common.HeaderBar.editProfile',\n    defaultMessage: 'Edit Profile',\n  },\n  myGroups: { id: 'Common.HeaderBar.myGroups', defaultMessage: 'My Groups' },\n  groupsBrowseMsg: {\n    id: 'Common.HeaderBar.groupsBrowseMsg',\n    defaultMessage: 'Browse Groups',\n  },\n\n  createGroup: {\n    id: 'Common.HeaderBar.createGroup',\n    defaultMessage: 'Create Group',\n  },\n  notifications: {\n    id: 'Common.HeaderBar.notifications',\n    defaultMessage: 'Notifications',\n  },\n  logout: {\n    id: 'Common.HeaderBar.logout',\n    defaultMessage: 'Log Out',\n  },\n  balanceMsg: {\n    id: 'Common.HeaderBar.balanceMsg',\n    defaultMessage: 'Balance:',\n\n  }\n});\n","import { makeStyles } from '@material-ui/core/styles';\nimport { blue, grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  toolBar: {\n    boxShadow: 'none',\n    [theme.breakpoints.up('lg')]: {\n      margin: 'auto',\n      maxWidth: 970, // TODO: get from theme\n      width: '100%'\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  grow: {\n    flexGrow: 1\n  },\n  appBar: {\n    boxShadow: 'none',\n    background: theme.appBar.backgroundColor\n  },\n  authGroup: {\n    display: 'flex',\n    '& > *': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  drawerAuthGroup: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& > *': {\n      margin: `${theme.spacing(1)}px ${theme.spacing(3)}px`\n    }\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: '70%',\n      flexShrink: 0\n    }\n  },\n  drawerPaper: {\n    width: '70%',\n    backgroundColor: theme.appBar.backgroundColor\n  },\n  closeMenuButton: {\n    marginLeft: 'auto',\n    marginRight: theme.spacing(1)\n  },\n  toolbar: theme.mixins.toolbar,\n  profileMenuLink: {\n    textDecoration: 'none',\n    textTransform: 'uppercase',\n    color: blue[400]\n  },\n  profileMenuItem: {\n    color: blue[500],\n    textTransform: 'uppercase',\n    textDecoration: 'none',\n    fontSize: '20px',\n\n    borderBottom: `1px solid ${grey[300]}`,\n    '&.MuiMenuItem-root': {\n      padding: `${theme.spacing(2)}px ${theme.spacing(4)}px`\n    }\n  },\n  listItemTextRoot: {\n    color: blue[200],\n    textTransform: 'uppercase',\n    textDecoration: 'none',\n    fontSize: '20px',\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Button from '@material-ui/core/Button';\n\nimport messages from './messages';\nimport useStyles from './useStyles';\n\nexport default function AuthBtnGroup() {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.authGroup}>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          component={Link}\n          color=\"primary\"\n          to=\"/login\"\n        >\n          <FormattedMessage {...messages.login} />\n        </Button>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          component={Link}\n          to=\"/signup\"\n          color=\"secondary\"\n        >\n          <FormattedMessage {...messages.signup} />\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { UserProfile } from '../../../types/user';\n\nimport messages from './messages';\n\nexport default function HeaderUserData(props: HeaderUserDataProps) {\n  const { userProfile, logoutUser } = props;\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box mr={2}>\n        <Typography variant=\"subtitle1\" color=\"primary\">\n          {userProfile.name}\n        </Typography>\n      </Box>\n      <Box mr={2}>\n        <Typography variant=\"subtitle1\" color=\"primary\">\n          <FormattedMessage {...messages.balanceMsg} /> {userProfile.balance} PW\n        </Typography>\n      </Box>\n\n      <Button size=\"large\" variant=\"contained\" onClick={logoutUser}>\n        <FormattedMessage {...messages.logout} />\n      </Button>\n    </Box>\n  );\n}\n\ntype HeaderUserDataProps = {\n  userProfile: UserProfile;\n  logoutUser: () => void;\n};\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Logo from '../Logo';\nimport AuthBtnGroup from './AuthBtnGroup';\nimport HeaderUserData from './HeaderUserData';\nimport useStyles from './useStyles';\nimport { UserProfile } from '../../../types/user';\n\nconst HeaderBar = (props: HeaderBarProps) => {\n  const { isAuthenticated, userProfile, logoutUser } = props;\n\n  const classes = useStyles();\n  const showUserData = isAuthenticated && userProfile;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" classes={{ root: classes.appBar }}>\n        <Toolbar className={classes.toolBar}>\n          <Logo />\n          <div className={classes.grow} />\n          {!isAuthenticated && <AuthBtnGroup />}\n          {/* Logged state */}\n          {showUserData && (\n            <HeaderUserData userProfile={userProfile} logoutUser={logoutUser} />\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\ntype HeaderBarProps = {\n  isAuthenticated: boolean;\n  userProfile: UserProfile;\n  logoutUser: () => void;\n};\n\nexport default HeaderBar;\n","import HeaderBar from './HeaderBar';\n\nexport default HeaderBar;\n","import { UserState } from '../../../reducers/user/user';\nimport { AuthState } from '../../../reducers/auth/auth';\nimport { UserProfile } from '../../../types/user';\n\ntype State = {\n  auth: AuthState;\n  user: UserState;\n};\n\ntype SelectedState = {\n  isAuthenticated: boolean;\n  userProfile?: UserProfile;\n};\n\nexport default function mapStateToProps(state: State): SelectedState {\n  const {\n    auth: { isAuthenticated },\n    user: { userData }\n  } = state;\n  return { isAuthenticated, userProfile: userData };\n}\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HeaderBar from '../../../components/Common/HeaderBar';\nimport mapStateToProps from './mapStateToProps'\nimport logoutUser from '../../../actions/logoutUser'\nimport { getUserProfile } from '../../../actions/getUserProfile';\n\nconst HeaderBarContainer = () => {\n  const selected = useSelector(mapStateToProps)\n  const {isAuthenticated, userProfile} = selected\n  const dispatch = useDispatch();\n\n  const logoutUserHandler = () => {\n    dispatch(logoutUser())\n  }\n  // mb header bar is a right place where should be fetching instead\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    dispatch(getUserProfile());\n  }, [dispatch, isAuthenticated]);\n  return <HeaderBar isAuthenticated={isAuthenticated} userProfile={userProfile} logoutUser={logoutUserHandler} />;\n};\n\nexport default HeaderBarContainer;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  headerMsg: {\n    id: 'Common.Footer.headerMsg',\n    defaultMessage: 'CURRENT CITIES',\n  },\n  contentLeft: {\n    id: 'Common.Footer.contentLeft',\n    defaultMessage:\n      'Local Accountability Groups for Founders. Bond with other Entrepreneurs personally and professionally.',\n  },\n  resources: {\n    id: 'Common.Footer.resources',\n    defaultMessage: 'Resources',\n  },\n  ourOrganization: {\n    id: 'Common.Footer.ourOrganization',\n    defaultMessage: 'Our Organization',\n  },\n\n  contactUs: {\n    id: 'Common.Footer.contactUs',\n    defaultMessage: 'Contact Us',\n  },\n  intro: {\n    id: 'Common.Footer.intro',\n    defaultMessage: 'Intro to FounderGroups',\n  },\n\n  guide: {\n    id: 'Common.Footer.guide',\n    defaultMessage: \"Group Leader's Guide\",\n  },\n\n  copyright: {\n    id: 'Common.Footer.copyright',\n    defaultMessage: '© PW 2020',\n  },\n  termsMsg: {\n    id: 'Common.Footer.termsMsg',\n    defaultMessage: 'Terms of Service',\n  },\n  privacyMsg: {\n    id: 'Common.Footer.privacyMsg',\n    defaultMessage: 'Privacy Policy',\n  },\n});\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './useStyles';\nimport HeaderBar from '../../../containers/Common/HeaderBar/HeaderBarContainer';\nimport messages from './messages';\n\nconst Layout = ({ children, type }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Box className={classes.content}>\n        <Box mb={10}>\n          <CssBaseline />\n          <HeaderBar />\n          {children}\n        </Box>\n      </Box>\n      <Box className={classes.secondRow} p={4}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Box mr={4}>\n                <Typography\n                  variant=\"body1\"\n                  component=\"p\"\n                  className={classes.footerContent}\n                >\n                  <FormattedMessage {...messages.copyright} />\n                </Typography>\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n// Layout.propTypes = {\n//   children: PropTypes.node.isRequired,\n//   type: PropTypes.string\n// };\n//\n// Layout.defaultProps = {\n//   type: undefined\n// };\n\nexport default Layout;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  alertRoot: {\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    marginBottom: theme.spacing(2),\n  },\n  cardRoot: {\n    paddingBottom: theme.spacing(3),\n  },\n  contentRoot: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n  },\n}));\n\nexport default useStyles;\n","import Autocomplete from './Autocomplete'\n\nexport default Autocomplete\n","/* eslint-disable no-use-before-define */\nimport React, {useEffect, useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MuiAutocomplete from '@material-ui/lab/Autocomplete';\nimport { UserRecord } from '../../../types/user';\n\nexport default function Autocomplete({\n  error,\n  initValue,\n  inputLabel,\n  users = [],\n  setValue,\n  onChangeFilter,\n}: ComboBoxProps) {\n  const [value, setStateValue] = useState<UserRecord | null>(null);\n\n  useEffect(() => {\n    if (!initValue) return;\n    setStateValue(initValue);\n    setValue('user', initValue);\n  }, [setValue, setStateValue, initValue]);\n\n  const handleChange = e => onChangeFilter(e.target.value);\n  const handleChangeValue = (value: UserRecord | null) => {\n    setStateValue(value);\n    setValue('user', value);\n  };\n  return (\n    <MuiAutocomplete\n      options={users}\n      getOptionLabel={option => option.name}\n      value={value}\n      onChange={(event, newValue) => {\n        handleChangeValue(newValue);\n      }}\n      style={{ width: 300 }}\n      renderInput={params => (\n        <TextField\n          {...params}\n          helperText={error && error.user && error.user.message}\n          error={!!error}\n          label={inputLabel}\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n      )}\n    />\n  );\n}\n\ntype ComboBoxProps = {\n  error?: any;\n  initValue: UserRecord | null;\n  inputLabel: string;\n  users: UserRecord[];\n  setValue: (name: string, value: UserRecord | null) => void;\n  onChangeFilter: (filter: string) => void;\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  peoplePlaceholder: {\n    id: 'Common.HomeScreen.peoplePlaceholder',\n    defaultMessage: 'Choose recepient to send'\n  },\n  amountPlaceholder: {\n    id: 'Common.HomeScreen.amountPlaceholder',\n    defaultMessage: 'PW amount to send'\n  },\n  fieldRequired: {\n    id: 'Common.HomeScreen.fieldRequired',\n    defaultMessage: 'required'\n  },\n  sendMoneyMsg: {\n    id: 'Common.HomeScreen.sendMoneyMsg',\n    defaultMessage: 'Send'\n  },\n  enoughMoneyMsg: {\n    id: 'Common.HomeScreen.enoughMoneyMsg',\n    defaultMessage: 'Not enough money'\n  },\n  transferMoneyMsg: {\n    id: 'Common.HomeScreen.transferMoneyMsg',\n    defaultMessage: 'Transfer money to a PW User'\n  },\n  repeatMsg: {\n    id: 'Common.HomeScreen.repeatMsg',\n    defaultMessage: 'repeat transaction'\n  },\n  required: {\n    id: 'Common.HomeScreen.required',\n    defaultMessage: 'required'\n  },\n  loadingMsg: {\n    id: 'Common.HomeScreen.loadingMsg',\n    defaultMessage: 'loading...'\n  }\n});\n","import TransferForm from './TransferForm'\n\nexport default TransferForm\n","import React, { useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport Alert from '@material-ui/lab/Alert';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport useStyles from './styles';\nimport Autocomplete from '../Autocomplete';\nimport { UserRecord } from '../../../types/user';\nimport messages from './messages';\n\nexport default function TransferForm({\n  loadingSend,\n  balance,\n  users,\n  submitError,\n\n  register,\n  handleSubmit,\n  errors,\n  setValue,\n\n  userInitValue,\n  setUserInitValue,\n\n  sendMoney,\n  onChangeFilter\n}: TransferFormProps) {\n  const { formatMessage } = useIntl();\n  const classes = useStyles();\n\n  useEffect(() => {\n    register({ name: 'user' }, { required: 'required' });\n  }, [register]);\n  return (\n    <Paper>\n      <Box p={4}>\n        <Typography variant=\"h2\">\n          {formatMessage(messages.transferMoneyMsg)}\n        </Typography>\n        <Box py={4}>\n          <form\n            className={classes.root}\n            onSubmit={handleSubmit((values: any) => sendMoney(values))}\n          >\n            <Box>\n              <Autocomplete\n                error={errors.user}\n                initValue={userInitValue}\n                setValue={setValue}\n                inputLabel={formatMessage(messages.peoplePlaceholder)}\n                users={users}\n                onChangeFilter={onChangeFilter}\n              />\n\n              {errors.user && (\n                <Box ml={2} mt={-2} mb={2}>\n                  <FormHelperText style={{ color: '#F44336' }}>\n                    <FormattedMessage {...messages.required} />\n                  </FormHelperText>\n                </Box>\n              )}\n            </Box>\n\n            <Box pt={1}>\n              <TextField\n                label={<FormattedMessage {...messages.amountPlaceholder} />}\n                type=\"number\"\n                variant=\"outlined\"\n                name=\"amount\"\n                helperText={!!errors.amount && errors.amount.message}\n                error={!!errors.amount}\n                inputRef={register({\n                  required: 'required',\n                  min: 1,\n                  validate: {\n                    max: value =>\n                      parseInt(value) <= balance ||\n                      formatMessage(messages.enoughMoneyMsg)\n                  }\n                })}\n              />\n            </Box>\n\n            {submitError && (\n              <Alert severity=\"error\" classes={{ root: classes.alertRoot }}>\n                {submitError}\n              </Alert>\n            )}\n            <Button\n              disabled={loadingSend}\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {loadingSend && <FormattedMessage {...messages.loadingMsg} />}\n              {!loadingSend && <FormattedMessage {...messages.sendMoneyMsg} />}\n            </Button>\n          </form>\n        </Box>\n      </Box>\n    </Paper>\n  );\n}\n\ntype TransferFormProps = {\n  loadingSend: boolean;\n  balance: number;\n  submitError?: string;\n  users: UserRecord[];\n  register: any;\n  errors: any;\n  handleSubmit: any;\n  setValue: any;\n\n  userInitValue: any;\n  setUserInitValue: any;\n\n  sendMoney: (value: { user: UserRecord | null; amount: string }) => void;\n  onChangeFilter: (filter: string) => void;\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  sendMoneyMsg: {\n    id: 'Common.Transactions.sendMoneyMsg',\n    defaultMessage: 'Resend'\n  },\n  transactionsMsg: {\n    id: 'Common.Transactions.transactionsMsg',\n    defaultMessage: 'Transactions'\n  }\n});\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\n\nimport { UserTransaction } from '../../../types/transactions';\nimport messages from './messages';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nexport default function Transactions({\n  transactions,\n  onRepeat\n}: TransactionsProps) {\n  const { formatMessage } = useIntl();\n  const classes = useStyles();\n  const showTransactions = transactions && !!transactions.length\n  if (!showTransactions) return null;\n  return (\n    <Box mt={4}>\n      <Paper>\n        <Box p={4}>\n          <Box py={2}>\n            <Typography variant=\"h2\">\n              {formatMessage(messages.transactionsMsg)}\n            </Typography>\n          </Box>\n          <TableContainer>\n            <Table className={classes.table} aria-label=\"transactions\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>№</TableCell>\n                  <TableCell align=\"right\">Date/Time</TableCell>\n                  <TableCell align=\"right\">Correspondent Name</TableCell>\n                  <TableCell align=\"right\">Transaction amount</TableCell>\n                  <TableCell align=\"right\">Resulting balance</TableCell>\n                  <TableCell align=\"right\">Repeat</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {transactions.map((row, n) => (\n                  <TableRow key={row.id}>\n                    <TableCell align=\"right\">{n}</TableCell>\n                    <TableCell align=\"right\">{row.date}</TableCell>\n                    <TableCell align=\"right\">{row.username}</TableCell>\n                    <TableCell align=\"right\">{row.amount}</TableCell>\n                    <TableCell align=\"right\">{row.balance}</TableCell>\n                    <TableCell align=\"right\">\n                      <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        onClick={() =>\n                          onRepeat({\n                            user: { id: row.id, name: row.username },\n                            amount: Math.abs(row.amount)\n                          })\n                        }\n                      >\n                        <FormattedMessage {...messages.sendMoneyMsg} />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Paper>\n    </Box>\n  );\n}\n\ntype TransactionsProps = {\n  transactions: UserTransaction[];\n  onRepeat: ({ user: UserRecord, amount: any }) => void;\n};\n","import Transactions from './Transactions'\n\nexport default Transactions\n","import HomeScreen from './HomeScreen';\n\nexport default HomeScreen;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\nimport Layout from '../../Common/Layout';\nimport TransferForm from '../../User/TransferForm';\nimport Transactions from '../../User/Transactions';\n\nimport { UserRecord } from '../../../types/user';\nimport { UserTransaction } from '../../../types/transactions';\n\nexport default function HomeScreen({\n  loadingSend,\n  balance,\n  submitError,\n  transactions,\n  users,\n\n  sendMoney,\n  onChangeFilter\n}: HomeScreenProps) {\n  const { register, handleSubmit, errors, setValue } = useForm();\n  const [userInitValue, setUserInitValue] = useState<UserRecord | null>(null);\n  const handleRepeat = ({\n    user,\n    amount\n  }: {\n    user: UserRecord;\n    amount: any;\n  }) => {\n    setUserInitValue(user);\n    setValue('amount', amount);\n  };\n\n  return (\n    <>\n      <Layout type=\"home\">\n        <Container maxWidth=\"lg\" style={{ maxWidth: '970px' }}>\n        <Box mt={4}>\n          <TransferForm\n            loadingSend={loadingSend}\n            register={register}\n            handleSubmit={handleSubmit}\n            errors={errors}\n            setValue={setValue}\n\n            balance={balance}\n            users={users}\n            userInitValue={userInitValue}\n            setUserInitValue={setUserInitValue}\n            submitError={submitError}\n            sendMoney={sendMoney}\n            onChangeFilter={onChangeFilter}\n          />\n          <Transactions transactions={transactions} onRepeat={handleRepeat} />\n          </Box>\n        </Container>\n      </Layout>\n    </>\n  );\n}\n\ntype HomeScreenProps = {\n  loadingSend: boolean;\n  balance: number;\n  transactions: UserTransaction[];\n  submitError?: string;\n  users: UserRecord[];\n  sendMoney: (value: { user: UserRecord | null; amount: string }) => void;\n  onChangeFilter: (filter: string) => void;\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  headerMsg: {\n    id: 'Common.WelcomeScreen.headerMsg',\n    defaultMessage: 'Welcome!'\n  },\n  bodyMsg: {\n    id: 'Common.WelcomeScreen.headerMsg',\n    defaultMessage: 'Parrot Wings is superb place where it can easy transfer your money! Let`s login to start'\n  }\n});\n","import WelcomeScreen from './WelcomeScreen';\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nimport Layout from '../../Common/Layout';\n\nimport messages from './messages';\n\nexport default function HomeScreen() {\n  const { formatMessage } = useIntl();\n  return (\n    <>\n      <Layout type=\"home\">\n        <Grid container>\n          <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"center\" pt={8} mb={2}>\n              <Typography variant=\"h2\">\n                {formatMessage(messages.headerMsg)}\n              </Typography>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\" mb={2}>\n              <Typography>{formatMessage(messages.bodyMsg)}</Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Layout>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withSnackbar } from 'notistack';\n\nimport createTransaction from '../../../actions/createTransaction';\nimport { getFilteredUserList } from '../../../actions/getFilteredUserList';\nimport { fetchUserTransactions } from '../../../actions/fetchUserTransactions';\nimport mapStateToProps from './mapStateToProps';\n\nimport HomeScreen from '../../../components/Unknown/HomeScreen';\nimport WelcomeScreen from '../../../components/Common/WelcomeScreen';\n\nfunction HomeScreenContainer({ enqueueSnackbar }) {\n  const [loadingSend, setLoadingSend] = useState(false);\n  const { balance, isAuthenticated, users, transactions } = useSelector(\n    mapStateToProps\n  );\n  const dispatch = useDispatch();\n  const [submitError, setSubmitError] = useState();\n\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    dispatch(fetchUserTransactions());\n  }, [dispatch, isAuthenticated]);\n\n  const handleChangeFilter = (filter: string) => {\n    dispatch(getFilteredUserList(filter));\n  };\n\n  const handleSendMoney = async values => {\n    const { user, amount } = values;\n    setLoadingSend(true);\n    const error = await dispatch(createTransaction({ user, amount }));\n    if (error) {\n      setSubmitError(error.message);\n    }\n    enqueueSnackbar('PW was successfully sended!');\n    setLoadingSend(false);\n  };\n\n  if (!isAuthenticated) {\n    return <WelcomeScreen />;\n  }\n\n  return (\n    <HomeScreen\n      loadingSend={loadingSend}\n      balance={balance}\n      transactions={transactions}\n      users={users}\n      submitError={submitError}\n      sendMoney={handleSendMoney}\n      onChangeFilter={handleChangeFilter}\n    />\n  );\n}\n\nexport default withSnackbar(HomeScreenContainer);\n","import HomeScreenContainer from './HomeScreenContainer'\n\nexport default HomeScreenContainer\n","import {START_TRANSACTIONS_DATA } from '../actionTypes/transactions';\n\nexport default function startFetchTransactions() {\n  return {\n    type: START_TRANSACTIONS_DATA\n  };\n}\n","import { RECEIVE_TRANSACTIONS_DATA } from '../actionTypes/transactions';\n\nexport default function setFetchTransactions(payload) {\n  return {\n    type: RECEIVE_TRANSACTIONS_DATA,\n    payload\n  };\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  header: {\n    id: 'Unknown.LoginScreen.header',\n    defaultMessage: 'Log In',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  formTitle: {\n    id: 'Common.LoginForm.formTitle',\n    defaultMessage: 'To Founder Groups',\n  },\n  emailPlaceholder: {\n    id: 'Common.SignupForm.emailPlaceholder',\n    defaultMessage: 'Email',\n  },\n  passwordPlaceholder: {\n    id: 'Common.SignupForm.passwordPlaceholder',\n    defaultMessage: 'Password',\n  },\n  signinLabel: {\n    id: 'Common.LoginForm.signinLabel',\n    defaultMessage: 'Signin',\n  },\n  facebookLabel: {\n    id: 'Common.LoginForm.facebookLabel',\n    defaultMessage: 'Login With Facebook',\n  },\n  googleLabel: {\n    id: 'Common.LoginForm.googleLabel',\n    defaultMessage: 'Login With Google',\n  },\n  twitterLabel: {\n    id: 'Common.LoginForm.twitterLabel',\n    defaultMessage: 'Login With Twitter',\n  },\n  signupLink: {\n    id: 'Common.LoginForm.signupLink',\n    defaultMessage: 'Create an Account',\n  },\n  forgotLink: {\n    id: 'Common.LoginForm.forgotLink',\n    defaultMessage: 'Forgot your password',\n  },\n  fieldRequired: {\n    id: 'Common.LoginForm.fieldRequired',\n    defaultMessage: 'required',\n  },\n  loading: {\n    id: 'Common.SignupForm.loading',\n    defaultMessage: 'loading...',\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  alertRoot: {\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    marginBottom: theme.spacing(2),\n  },\n  cardRoot: {\n    paddingBottom: theme.spacing(3),\n  },\n  contentRoot: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n  },\n}));\n\nexport default useStyles;\n","import LoginForm from './LoginForm';\n\nexport default LoginForm;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport Alert from '@material-ui/lab/Alert';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\n\nimport messages from './messages';\nimport useStyles from './styles';\n\nconst LoginForm = ({ loading, submitError, onSubmit }) => {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  return (\n    <>\n      <Card classes={{ root: classes.cardRoot }}>\n        <Divider />\n        <CardContent classes={{ root: classes.contentRoot }}>\n          <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n              label={<FormattedMessage {...messages.emailPlaceholder} />}\n              type=\"email\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"email\"\n              helperText={\n                !!errors.email && (\n                  <FormattedMessage {...messages.fieldRequired} />\n                )\n              }\n              error={!!errors.email}\n              inputRef={register({ required: true })}\n            />\n            <TextField\n              label={<FormattedMessage {...messages.passwordPlaceholder} />}\n              type=\"password\"\n              autoComplete=\"current-password\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"password\"\n              helperText={\n                !!errors.password && (\n                  <FormattedMessage {...messages.fieldRequiredAndMin6} />\n                )\n              }\n              error={!!errors.password}\n              inputRef={register({ required: true })}\n            />\n\n            {submitError && (\n              <Alert severity=\"error\" classes={{ root: classes.alertRoot }}>\n                {submitError}\n              </Alert>\n            )}\n\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              disabled={loading}\n              fullWidth\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {!loading && <FormattedMessage {...messages.signinLabel} />}\n              {loading && <FormattedMessage {...messages.loading} />}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL } from '../actionTypes/auth';\nimport persistAuthInfo from './persistAuthInfo';\nimport config from '../config';\n\nconst baseUrl = config.common.baseUrl;\n\nexport const loginSuccess = idToken => ({\n  type: LOGIN_SUCCESS,\n  idToken\n});\n\nexport const loginFail = errorStatus => {\n  persistAuthInfo({});\n  return {\n    type: LOGIN_FAIL,\n    errorStatus\n  };\n};\n\nconst loginUser = (email, password) => async dispatch => {\n  let response;\n  try {\n    response = await axios.request({\n      url: `/sessions/create`,\n      method: 'post',\n      baseURL: `${baseUrl}`,\n      headers: { 'Content-Type': 'application/json' },\n      data: { email, password }\n    });\n\n    if (response.status !== 201) throw new Error({response})\n\n    // status: 201\n    const idToken = response.data['id_token'];\n    dispatch(loginSuccess(idToken));\n\n    persistAuthInfo({ idToken });\n    return;\n  } catch (err) {\n    // 400: You must send email and password.\n    // 401: Invalid email or password.\n    dispatch(loginFail(err.response.status));\n    return { message: err.response.data };\n  }\n};\n\nexport default loginUser;\n","import axios from 'axios';\nimport { loginSuccess, loginFail } from './loginUser';\nimport persistAuthInfo from './persistAuthInfo';\nimport config from '../config';\n\nconst baseUrl = config.common.baseUrl;\n\nconst signupUser = ({ username, email, password }) => async dispatch => {\n  let response;\n  try {\n    response = await axios.request({\n      url: `/users`,\n      method: 'POST',\n      baseURL: `${baseUrl}`,\n      headers: { 'Content-Type': 'application/json' },\n      data: { username, email, password }\n    });\n    if (response.status !== 201) throw new Error({ response });\n\n    const idToken = response.data['id_token'];\n    dispatch(loginSuccess(idToken));\n\n    persistAuthInfo({ idToken });\n    return;\n  } catch (err) {\n    dispatch(loginFail(err.response.status));\n    return { message: err.response.data };\n  }\n};\nexport default signupUser;\n","import { loginSuccess } from './loginUser';\n\nconst verifyAuth = () => dispatch => {\n  if (typeof window === 'object') {\n    const authStr: any = window.localStorage.getItem('auth');\n    if (!authStr) return\n    const authData: PersistAuth = JSON.parse(authStr);\n    if (authData && !authData.idToken) return;\n    dispatch(loginSuccess(authData.idToken));\n  }\n};\n\ntype LocalStorageItem = string | null\n\ntype PersistAuth = {\n  idToken: string\n}\nexport default verifyAuth;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport LoginForm from '../../components/Common/LoginForm';\nimport { loginUser } from '../../actions';\n\nconst LoginFormContainer = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [submitError, setSubmitError] = useState();\n\n  const handleSubmit = async ({ email, password }) => {\n    setLoading(true);\n    const error = await dispatch(loginUser(email, password));\n    if (!error) return history.push('/');\n    setSubmitError(error.message);\n    setLoading(false);\n    return null;\n  };\n  return (\n    <LoginForm\n      loading={loading}\n      submitError={submitError}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nexport default LoginFormContainer;\n","import LoginScreen from './LoginScreen';\n\nexport default LoginScreen;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport messages from './messages';\nimport Layout from '../../Common/Layout';\nimport LoginForm from '../../../containers/Common/LoginFormContainer';\n\nexport default function LoginScreen() {\n  return (\n    <>\n      <Layout>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <Box display=\"flex\" py={5} justifyContent=\"center\">\n              <Typography variant=\"h1\" component=\"h1\">\n                <FormattedMessage {...messages.header} />\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={8} md={6} lg={4} xl={3}>\n            <LoginForm />\n          </Grid>\n        </Grid>\n      </Layout>\n    </>\n  );\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  header: {\n    id: 'Unknown.SignupScreen.signupHeader',\n    defaultMessage: 'Sign Up',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  signinLabel: {\n    id: 'Common.SignupForm.signinLabel',\n    defaultMessage: 'Create an Account'\n  },\n  namePlaceholder: {\n    id: 'Common.SignupForm.namePlaceholder',\n    defaultMessage: 'Your Name'\n  },\n  emailPlaceholder: {\n    id: 'Common.SignupForm.emailPlaceholder',\n    defaultMessage: 'Email'\n  },\n  passwordPlaceholder: {\n    id: 'Common.SignupForm.passwordPlaceholder',\n    defaultMessage: 'Password'\n  },\n  repasswordPlaceholder: {\n    id: 'Common.SignupForm.passwordPlaceholder',\n    defaultMessage: 'Retype Password'\n  },\n  fieldRequired: {\n    id: 'Common.SignupForm.fieldRequired',\n    defaultMessage: 'required'\n  },\n  fieldRequiredAndMin6: {\n    id: 'Common.SignupForm.fieldRequiredAndMin6',\n    defaultMessage: 'required'\n  },\n  loading: {\n    id: 'Common.SignupForm.loading',\n    defaultMessage: 'loading...'\n  },\n  repasswordMessage: {\n    id: 'Common.SignupForm.repasswordMessage',\n    defaultMessage: 'field should be equal to password'\n  }\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  alertRoot: {\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    marginBottom: theme.spacing(2),\n  },\n  cardRoot: {\n    paddingBottom: theme.spacing(3),\n  },\n  contentRoot: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n  },\n}));\n\nexport default useStyles;\n","import SignupForm from './SignupForm';\n\nexport default SignupForm;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport Alert from '@material-ui/lab/Alert';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport messages from './messages';\nimport useStyles from './styles';\n\nconst SignupForm = ({ loading, submitError, onSubmit }) => {\n  const classes = useStyles();\n  const { register, handleSubmit, errors, getValues } = useForm();\n  return (\n    <>\n      <Card classes={{ root: classes.cardRoot }}>\n        <Divider />\n        <CardContent classes={{ root: classes.contentRoot }}>\n          <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n              label={<FormattedMessage {...messages.namePlaceholder} />}\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"username\"\n              helperText={\n                !!errors.username && (\n                  <FormattedMessage {...messages.fieldRequired} />\n                )\n              }\n              error={!!errors.username}\n              inputRef={register({ required: true })}\n            />\n            <TextField\n              label={<FormattedMessage {...messages.emailPlaceholder} />}\n              type=\"email\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"email\"\n              helperText={\n                !!errors.email && (\n                  <FormattedMessage {...messages.fieldRequired} />\n                )\n              }\n              error={!!errors.email}\n              inputRef={register({ required: true })}\n            />\n            <TextField\n              label={<FormattedMessage {...messages.passwordPlaceholder} />}\n              type=\"password\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"password\"\n              helperText={\n                !!errors.password && (\n                  <FormattedMessage {...messages.fieldRequiredAndMin6} />\n                )\n              }\n              error={!!errors.password}\n              inputRef={register({ min: 6, required: true })}\n            />\n\n            <TextField\n              label={<FormattedMessage {...messages.repasswordPlaceholder} />}\n              type=\"password\"\n              variant=\"outlined\"\n              fullWidth\n              name=\"repassword\"\n              helperText={\n                !!errors.repassword && (\n                  <FormattedMessage {...messages.repasswordMessage} />\n                )\n              }\n              error={!!errors.repassword}\n              inputRef={register({\n                validate: {\n                  retype: value => getValues('password') === value\n                }\n              })}\n            />\n\n            {submitError && (\n              <Alert severity=\"error\" classes={{ root: classes.alertRoot }}>\n                {submitError}\n              </Alert>\n            )}\n\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              disabled={loading}\n              fullWidth\n              className={classes.grow}\n              color=\"primary\"\n              type=\"submit\"\n            >\n              {!loading && <FormattedMessage {...messages.signinLabel} />}\n              {loading && <FormattedMessage {...messages.loading} />}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default SignupForm;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport SignupForm from '../../components/Common/SignupForm';\nimport { signupUser } from '../../actions';\n\nconst SignupFormContainer = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [submitError, setSubmitError] = useState();\n\n  const handleSubmit = async ({ username, email, password }) => {\n    setLoading(true);\n    const error = await dispatch(signupUser({username, email, password}));\n    if (!error) return history.push('/');\n    setSubmitError(error.message);\n    setLoading(false);\n    return null;\n  };\n\n  return (\n    <SignupForm\n      loading={loading}\n      submitError={submitError}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nexport default SignupFormContainer;\n","import SignupScreen from './SignupScreen';\n\nexport default SignupScreen;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport messages from './messages';\nimport Layout from '../../Common/Layout';\nimport SignupForm from '../../../containers/Common/SignupFormContainer';\n\nexport default function SignupScreen() {\n  return (\n    <>\n      <Layout>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <Box display=\"flex\" py={5} justifyContent=\"center\">\n            <Typography variant=\"h1\" component=\"h1\">\n              <FormattedMessage {...messages.header} />\n            </Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={8} md={6} lg={4} xl={3}>\n            <SignupForm />\n          </Grid>\n        </Grid>\n      </Layout>\n    </>\n  );\n}\n","import Routes from './Routes';\n\nexport default Routes;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeScreen from '../../../containers/Common/HomeScreenContainer';\nimport LoginScreen from '../../Unknown/LoginScreen';\nimport SignupScreen from '../../Unknown/SignupScreen';\n\n// import ProtectedRoute from '../ProtectedRoute';\n// `component`s should have same values to reuse them in `Switch`\n// details are here: https://github.com/ReactTraining/react-router/issues/4578#issuecomment-282081567\nconst routes = ({ isAuthenticated, isVerifying }) => (\n  <Switch>\n    <Route path=\"/login\" exact component={LoginScreen} />\n    <Route path=\"/signup\" exact component={SignupScreen} />\n    {/*<ProtectedRoute\n      exact\n      path=\"/notifications\"\n      component={NotificationsScreen}\n      isAuthenticated={isAuthenticated}\n      isVerifying={isVerifying}\n    />*/}\n    <Route path=\"/\" exact component={HomeScreen} />\n  </Switch>\n);\n\nconst Routes = ({ isAuthenticated, isVerifying }) =>\n  routes({ isAuthenticated, isVerifying });\n\nexport default Routes;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Routes from '../../components/Common/Routes';\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    isVerifying: state.auth.isVerifying\n  };\n}\n\nconst RoutesContainer = () => {\n  const state = useSelector(mapStateToProps);\n  return <Routes {...state} />;\n};\n\nexport default RoutesContainer;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport Routes from '../../../containers/Common/RoutesContainer';\n\nimport './App.css';\n\nexport default function App() {\n  return <Routes />;\n}\n","import Router from './Router';\n\nexport default Router;\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\n\nexport default function Router(props) {\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <ConnectedRouter {...props} />;\n}\n","import { handleActions } from 'redux-actions';\nimport { createSelector } from 'reselect';\nimport {\n  SET_LOCALE,\n} from '../../actionTypes/common';\nimport config from '../../config';\n\nconst initialState = {\n  locale: config.common.defaultLocale,\n};\n\nexport default handleActions({\n  [SET_LOCALE]: (state, { payload }) => ({ ...state, locale: payload }),\n}, initialState);\n\nconst getRoot = (state) => state.common.config;\nexport const getLocale = createSelector(getRoot, (state) => state.locale);\n","// eslint-disable-next-line import/prefer-default-export\nexport const SET_LOCALE = 'common/SET_LOCALE';\n","import enTranslationMessages from '../translations/en.json';\nimport config from '../config';\n\nconst formatTranslationMessages = (locale, messages) => {\n  const { defaultLocale } = config.common;\n  const messageKeys = Object.keys(messages);\n  const defaultFormattedMessages = locale !== defaultLocale\n    ? formatTranslationMessages(defaultLocale, enTranslationMessages)\n    : {};\n\n  return messageKeys.reduce((formattedMessages, key) => {\n    const isDefaultFormattedMessage = !messages[key] && locale !== defaultLocale;\n    const formattedMessage = isDefaultFormattedMessage\n      ? defaultFormattedMessages[key]\n      : messages[key];\n\n    return Object.assign(formattedMessages, { [key]: formattedMessage });\n  }, {});\n};\n\nexport default {\n  en: formatTranslationMessages('en', enTranslationMessages),\n};\n","import PropTypes from 'prop-types';\nimport omitNewLines from '../../../common/omitNewLines';\n\nexport default function IntlTextComponent({ children }) {\n  return omitNewLines(children);\n}\n\nIntlTextComponent.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","export default function omitNewLines(string) {\n  return string.replace(/\\s+/g, ' ');\n}\n","import IntlTextComponent from './IntlTextComponent';\n\nexport default IntlTextComponent;\n","import IntlProvider from './IntlProvider';\n\nexport default IntlProvider;\n","import React from 'react';\nimport { IntlProvider as IntlProviderBase } from 'react-intl';\nimport translations from '../../../common/translations';\nimport IntlTextComponent from '../IntlTextComponent';\n\n// `key` is needed to force re-rendering\nexport default function IntlProvider({ locale, ...props }) {\n  return (\n    <IntlProviderBase\n      key={locale}\n      locale={locale}\n      messages={translations[locale]}\n      textComponent={IntlTextComponent}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n    />\n  );\n}\n\n// IntlProvider.propTypes = {\n//   locale: PropTypes.string.isRequired,\n// };\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { getLocale } from '../../reducers/common/config';\nimport IntlProvider from '../../components/Common/IntlProvider';\n\nconst mapState = createStructuredSelector({ locale: getLocale });\n\nconst mapDispatch = {};\n\nexport default connect(mapState, mapDispatch)(IntlProvider);\n","import theme from './Theme';\n\nexport default theme;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { grey, green } from '@material-ui/core/colors';\n// '#EA80FC'\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1c1a4e',// grey[900],\n      contrastText: '#fcfc4b', // fff\n      light: '#032c54'\n    },\n    secondary: {\n      main: green[500],\n      contrastText: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#000'\n    }\n  },\n  appBar: {\n    height: 60,\n    backgroundColor: green[100],\n  },\n  overrides: {\n    MuiInputLabel: {\n      outlined: {\n        color: grey[500]\n      }\n    },\n    MuiTypography: {\n      h1: {\n        fontSize: 22,\n        fontWeight: 'bold',\n        textTransform: 'uppercase'\n      },\n      h2: {\n        fontSize: 28,\n        fontWeight: 600,\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        lineHeight: 1.5,\n        letterSpacing: 'normal'\n      },\n      h3: {\n        fontSize: 28,\n        textTransform: 'none'\n      },\n      h4: {\n        fontSize: 21,\n        textTransform: 'none'\n      },\n      h5: {\n        fontSize: 15,\n        textTransform: 'none'\n      },\n      h6: {\n        fontSize: 13,\n        textTransform: 'none'\n      },\n      subtitle1: {\n        fontSize: 18,\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        lineHeight: 1.5,\n        letterSpacing: 'normal'\n      },\n      caption: {\n        fontSize: 18,\n        textTransform: 'uppercase',\n        fontWeight: 'normal',\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        lineHeight: 'normal',\n        letterSpacing: 'normal'\n      }\n    }\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport App from '../App';\nimport Router from '../Router';\nimport IntlProviderContainer from '../../../containers/Common/IntlProviderContainer';\n\nimport theme from '../Theme';\nimport { SnackbarProvider } from 'notistack';\n\nfunction Entrypoint({ history, store }) {\n  return (\n    <Provider store={store}>\n      <IntlProviderContainer>\n        <SnackbarProvider maxSnack={3}>\n          <Router history={history}>\n            <ThemeProvider theme={theme}>\n              <App />\n            </ThemeProvider>\n          </Router>\n        </SnackbarProvider>\n      </IntlProviderContainer>\n    </Provider>\n  );\n}\n\nexport default Entrypoint;\n","import { combineReducers } from 'redux';\nimport config from './config';\n\nexport default combineReducers({\n  config,\n});\n","import auth from './auth';\n\nexport default auth;\n","import {\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n} from '../../actionTypes/auth';\n\nexport type AuthState = {\n  loading: boolean,\n  isAuthenticated: boolean,\n  idToken?: string,\n}\n\nexport default (\n  state: AuthState = {\n    loading: false,\n    isAuthenticated: false,\n    idToken: undefined\n  },\n  action\n) => {\n  switch (action.type) {\n    case LOGIN_START:\n      return {\n        ...state,\n        loading: true,\n        isAuthenticated: false,\n        idToken: undefined\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        idToken: action.idToken\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        idToken: undefined\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        idToken: undefined,\n        user: {}\n      };\n    default:\n      return state;\n  }\n};\n","import user from './user';\n\nexport default user;\n","import {\n  START_USER_DATA,\n  RECEIVE_USER_DATA,\n  FAIL_USER_DATA\n} from '../../actionTypes/user';\n\nimport {UserProfile} from '../../types/user';\n\n\nexport type UserState = {\n  loaded: boolean,\n  loading: boolean,\n  userData?: UserProfile,\n  errorStatus?: number,\n}\n\nexport default (\n  state: UserState = {\n    loaded: false,\n    loading: false,\n    userData: undefined,\n    errorStatus: undefined,\n  },\n  action,\n) => {\n  switch (action.type) {\n    case START_USER_DATA:\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n        errorStatus: undefined,\n      };\n    case RECEIVE_USER_DATA:\n      return {\n        ...state,\n        loaded: true,\n        loading: false,\n        userData: action.userData,\n        errorStatus: undefined,\n      };\n    case FAIL_USER_DATA:\n      return {\n        ...state,\n        loaded: false,\n        loading: false,\n        errorStatus: action.errorStatus\n      };\n    default:\n      return state;\n  }\n};\n","import users from './users';\n\nexport default users;\n","import {\n  START_FETCH_FILTERED_USER_LIST,\n  RECEIVE_FILTERED_USER_LIST,\n  FAIL_FETCH_FILTERED_USER_LIST\n} from '../../actionTypes/users';\n\nimport {UserRecord} from '../../types/user';\n\nexport default (\n  state: UsersState = {\n    loading: false,\n    users: undefined,\n    errorStatus: undefined,\n  },\n  action,\n) => {\n  switch (action.type) {\n    case START_FETCH_FILTERED_USER_LIST:\n      return {\n        ...state,\n        loading: true,\n        errorStatus: undefined,\n      };\n    case RECEIVE_FILTERED_USER_LIST:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload,\n        errorStatus: undefined,\n      };\n    case FAIL_FETCH_FILTERED_USER_LIST:\n      return {\n        ...state,\n        loading: false,\n        users: undefined,\n        errorStatus: action.errorStatus\n      };\n    default:\n      return state;\n  }\n};\n\nexport type UsersState = {\n  loading: boolean,\n  users?: UserRecord,\n  errorStatus?: number,\n}\n","import transactions from './transactions';\n\nexport default transactions;\n","import {\n  START_TRANSACTIONS_DATA,\n  RECEIVE_TRANSACTIONS_DATA,\n  FAIL_TRANSACTIONS_DATA,\n  START_CREATE_TRANSACTION,\n  SUCCESSFUL_CREATE_TRANSACTION,\n  FAIL_CREATE_TRANSACTION\n} from '../../actionTypes/transactions';\n\nimport { UserTransaction } from '../../types/transactions';\n\nexport type TransactionsState = {\n  fetchLoading: boolean;\n  setLoading: boolean;\n  transactions: UserTransaction[];\n  errorFetch?: number;\n  errorSet?: number;\n};\n\nexport default (\n  state: TransactionsState = {\n    fetchLoading: false,\n    setLoading: false,\n    transactions: [],\n    errorFetch: undefined,\n    errorSet: undefined,\n  },\n  action\n) => {\n  switch (action.type) {\n    case START_TRANSACTIONS_DATA:\n      return {\n        ...state,\n        fetchLoading: true,\n        errorFetch: undefined\n      };\n    case RECEIVE_TRANSACTIONS_DATA:\n      return {\n        ...state,\n        fetchLoading: false,\n        transactions: action.payload,\n      };\n    case FAIL_TRANSACTIONS_DATA:\n      return {\n        ...state,\n        fetchLoading: false,\n        transactions: action.payload,\n        errorFetch: action.payload\n      };\n\n      case START_CREATE_TRANSACTION:\n        return {\n          ...state,\n          setLoading: true,\n          errorSet: undefined\n        };\n      case SUCCESSFUL_CREATE_TRANSACTION:\n        return {\n          ...state,\n          setLoading: false,\n          transactions: [action.payload, ...state.transactions],\n        };\n      case FAIL_CREATE_TRANSACTION:\n        return {\n          ...state,\n          setLoading: false,\n          transactions: [],\n          errorSet: action.payload\n        };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport * as reducers from '../reducers';\n\nexport default function configureRootReducer({ history }) {\n  const rootReducer = combineReducers({\n    ...history ? {\n      router: connectRouter(history),\n    } : {},\n    ...reducers\n  });\n\n  return rootReducer;\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport configureRootReducer from './configureRootReducer';\nimport { verifyAuth } from '../actions';\n\nfunction computeEnchancers() {\n  const isProduction = process.env.NODE_ENV !== 'production';\n  const reduxDevtoolsExtensionCompose =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n  const isWindowObject = typeof window === 'object';\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  return isProduction && isWindowObject && reduxDevtoolsExtensionCompose\n    ? reduxDevtoolsExtensionCompose\n    : compose;\n}\n\nexport default async function configureStoreGlobal(\n  initialState = undefined,\n  { history }\n) {\n  const middlewares = [thunk];\n  if (history) {\n    middlewares.push(routerMiddleware(history));\n  }\n\n  const enhancers = [applyMiddleware(...middlewares)];\n  const composeEnhancers = computeEnchancers();\n\n  const rootReducer = configureRootReducer({ history });\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(...enhancers)\n  );\n  await store.dispatch(verifyAuth());\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createBrowserHistory } from 'history';\nimport './index.css';\nimport Entrypoint from './components/Common/Entrypoint/Entrypoint';\nimport configureStore from './common/configureStore';\n\nasync function run() {\n  const history = createBrowserHistory();\n\n  const store = await configureStore(undefined, {\n    history\n  });\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Entrypoint history={history} store={store} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrun();\n"],"sourceRoot":""}